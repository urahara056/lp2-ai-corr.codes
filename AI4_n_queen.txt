def is_safe(board, row, col, N):
    # Check if there is a queen in the same row
    for i in range(col):
        if board[row][i] == 1:
            return False

    # Check upper diagonal on left side
    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    # Check lower diagonal on left side
    for i, j in zip(range(row, N, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solve_nqueens_util(board, col, N):
    # If all queens are placed then return True
    if col >= N:
        return True

    # Consider this column and try placing this queen in all rows one by one
    for i in range(N):
        if is_safe(board, i, col, N):
            # Place this queen in board[i][col]
            board[i][col] = 1

            # Recur to place rest of the queens
            if solve_nqueens_util(board, col + 1, N) == True:
                return True

            # If placing queen in board[i][col] doesn't lead to a solution then remove queen from board[i][col]
            board[i][col] = 0

    # If the queen can't be placed in any row in this column, then return False
    return False


def solve_nqueens(N):
    # Initialize the board
    board = [[0] * N for _ in range(N)]

    # Call the utility function to solve the problem
    if solve_nqueens_util(board, 0, N) == False:
        print("Solution does not exist")
        return False

    # Print the solution
    print("Solution:")
    for i in range(N):
        for j in range(N):
            print(board[i][j], end=" ")
        print()
    return True


# Take input from the user for board size
N = int(input("Enter the board size (N): "))
solve_nqueens(N)



*****OUTPUT*****

C:\Users\91844\PycharmProjects\HelloWorld\pythonProject\.venv\bin\python.exe C:\Users\91844\PycharmProjects\HelloWorld\pythonProject\n_queen.py 
Enter the board size (N): 10
Solution:
1 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 1 0 0 
0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 1 
0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 

Process finished with exit code 0
